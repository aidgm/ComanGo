<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        S/m3ZbWoAAAAAElFTkSuQmCC
</value>
  </data>
</root>